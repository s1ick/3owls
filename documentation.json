{
    "pipes": [
        {
            "name": "SalePipe",
            "id": "pipe-SalePipe-d1bad9eb69f7b41cf6788d69af0d299cb6cb98015811eae6e75c97dbde50c38a4d70da831c21d621bcf5c0202528fc4e74479bb47bd1ddf8cc6f03c9f6a6cdac",
            "file": "src/app/components/product/sale.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "oldPrice",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "newPrice",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "oldPrice",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "newPrice",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": false,
            "ngname": "sale",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'sale' })\r\nexport class SalePipe implements PipeTransform {\r\n  transform(oldPrice: number, newPrice: number): string {\r\n    if (oldPrice <= newPrice) return '';\r\n    const sale = Math.round(((oldPrice - newPrice) / oldPrice) * 100);\r\n    return `${sale}%`;\r\n  }\r\n}"
        }
    ],
    "interfaces": [
        {
            "name": "Product",
            "id": "interface-Product-46607176e69740b26eb64b00c0eb98e32f4e9da9cfce5ae22e501ccfc117935e286749738a6237842bdcafa68ef0b227be073838a4fdb520d75fda6cacfe5c3a",
            "file": "src/app/models/product.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Product {\r\n  id: number;               \r\n  image: string | number;   \r\n  description: string;      \r\n  oldPrice: number;         \r\n  newPrice: number;         \r\n  sizes: string[];          \r\n  isFavorite: boolean;      \r\n}",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "isFavorite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "newPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "oldPrice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "sizes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "ProductService",
            "id": "injectable-ProductService-f8dcd66311950ef6dcfef658ff637e258d91050f83a7ba0e247df2d2d433c8c61bb0cca82cd26ebeceed4a611015d3b4d003f8dd987c63930d018c45ea745e5b",
            "file": "src/app/product.service.ts",
            "properties": [
                {
                    "name": "descriptions",
                    "defaultValue": "[\r\n    'Вельветовый пуховик',\r\n    'Утеплённое пальто с поясом',\r\n    'Кожаная косуха',\r\n    'Джинсы скинни',\r\n    'Кашемировый свитер',\r\n    'Спортивный костюм',\r\n    'Платье-миди с цветочным принтом',\r\n    'Бомбер с вышивкой',\r\n    'Рубашка в клетку',\r\n    'Шерстяное пальто',\r\n    'Джинсы mom-фасон',\r\n    'Тренч классический',\r\n    'Футболка oversize',\r\n    'Кардиган крупной вязки',\r\n    'Юбка-карандаш',\r\n    'Парка зимняя',\r\n    'Брюки чинос',\r\n    'Толстовка с капюшоном',\r\n    'Платье-футляр',\r\n    'Куртка-аляска',\r\n    'Свитшот с принтом',\r\n    'Костюм тройка',\r\n    'Шорты джинсовые',\r\n    'Блуза с жабо',\r\n    'Пуховый жилет',\r\n    'Джинсы с высокой талией',\r\n    'Пиджак оверсайз',\r\n    'Комбинезон джинсовый',\r\n    'Туника с поясом',\r\n    'Куртка косуха',\r\n    'Брюки карго',\r\n    'Топ с открытыми плечами',\r\n    'Пальто демисезонное',\r\n    'Джемпер с V-образным вырезом',\r\n    'Юбка плиссе',\r\n    'Ветровка с капюшоном',\r\n    'Рубашка оверсайз',\r\n    'Жилет меховой',\r\n    'Брюки с широким поясом',\r\n    'Платье-рубашка',\r\n    'Куртка стёганая',\r\n    'Кардиган на пуговицах',\r\n    'Шорты классические',\r\n    'Топ на бретелях',\r\n    'Плащ дождевик',\r\n    'Свитер с высоким горлом',\r\n    'Юбка-макси',\r\n    'Бомбер светоотражающий',\r\n    'Футболка поло',\r\n    'Костюм спортивный',\r\n    'Кожаные лоферы',\r\n    'Сумка кросс-боди'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sizes",
                    "defaultValue": "['XS', 'S', 'M', 'L', 'XL', 'XXL']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "generateProducts",
                    "args": [
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRandomSizes",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductService {\r\n  private descriptions = [\r\n    'Вельветовый пуховик',\r\n    'Утеплённое пальто с поясом',\r\n    'Кожаная косуха',\r\n    'Джинсы скинни',\r\n    'Кашемировый свитер',\r\n    'Спортивный костюм',\r\n    'Платье-миди с цветочным принтом',\r\n    'Бомбер с вышивкой',\r\n    'Рубашка в клетку',\r\n    'Шерстяное пальто',\r\n    'Джинсы mom-фасон',\r\n    'Тренч классический',\r\n    'Футболка oversize',\r\n    'Кардиган крупной вязки',\r\n    'Юбка-карандаш',\r\n    'Парка зимняя',\r\n    'Брюки чинос',\r\n    'Толстовка с капюшоном',\r\n    'Платье-футляр',\r\n    'Куртка-аляска',\r\n    'Свитшот с принтом',\r\n    'Костюм тройка',\r\n    'Шорты джинсовые',\r\n    'Блуза с жабо',\r\n    'Пуховый жилет',\r\n    'Джинсы с высокой талией',\r\n    'Пиджак оверсайз',\r\n    'Комбинезон джинсовый',\r\n    'Туника с поясом',\r\n    'Куртка косуха',\r\n    'Брюки карго',\r\n    'Топ с открытыми плечами',\r\n    'Пальто демисезонное',\r\n    'Джемпер с V-образным вырезом',\r\n    'Юбка плиссе',\r\n    'Ветровка с капюшоном',\r\n    'Рубашка оверсайз',\r\n    'Жилет меховой',\r\n    'Брюки с широким поясом',\r\n    'Платье-рубашка',\r\n    'Куртка стёганая',\r\n    'Кардиган на пуговицах',\r\n    'Шорты классические',\r\n    'Топ на бретелях',\r\n    'Плащ дождевик',\r\n    'Свитер с высоким горлом',\r\n    'Юбка-макси',\r\n    'Бомбер светоотражающий',\r\n    'Футболка поло',\r\n    'Костюм спортивный',\r\n    'Кожаные лоферы',\r\n    'Сумка кросс-боди'\r\n  ];\r\n\r\n  private sizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL'];\r\n\r\n  generateProducts(count: number) {\r\n    return Array.from({ length: count }, (_, i) => {\r\n      const oldPrice = Math.floor(Math.random() * 4001) + 1000; \r\n      const availableSizes = this.getRandomSizes();\r\n      \r\n      return {\r\n        id: i + 1,\r\n        image: `${Math.floor(Math.random() * 8) + 1}`, \r\n        description: this.descriptions[i % this.descriptions.length],\r\n        oldPrice,\r\n        newPrice: Math.floor(Math.random() * (oldPrice - 500)) + 500, \r\n        sizes: availableSizes,\r\n        isFavorite: false\r\n      };\r\n    });\r\n  }\r\n\r\n  private getRandomSizes(): string[] {\r\n    const count = Math.floor(Math.random() * 3) + 2; \r\n    const shuffled = [...this.sizes].sort(() => 0.5 - Math.random());\r\n    return shuffled.slice(0, count).sort();\r\n  }\r\n}",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ProductService",
            "id": "injectable-ProductService-f8dcd66311950ef6dcfef658ff637e258d91050f83a7ba0e247df2d2d433c8c61bb0cca82cd26ebeceed4a611015d3b4d003f8dd987c63930d018c45ea745e5b-1",
            "file": "src/app/services/product.service.ts",
            "properties": [
                {
                    "name": "descriptions",
                    "defaultValue": "[\r\n    'Вельветовый пуховик',\r\n    'Утеплённое пальто с поясом',\r\n    'Кожаная косуха',\r\n    'Джинсы скинни',\r\n    'Кашемировый свитер',\r\n    'Спортивный костюм',\r\n    'Платье-миди с цветочным принтом',\r\n    'Бомбер с вышивкой',\r\n    'Рубашка в клетку',\r\n    'Шерстяное пальто',\r\n    'Джинсы mom-фасон',\r\n    'Тренч классический',\r\n    'Футболка oversize',\r\n    'Кардиган крупной вязки',\r\n    'Юбка-карандаш',\r\n    'Парка зимняя',\r\n    'Брюки чинос',\r\n    'Толстовка с капюшоном',\r\n    'Платье-футляр',\r\n    'Куртка-аляска',\r\n    'Свитшот с принтом',\r\n    'Костюм тройка',\r\n    'Шорты джинсовые',\r\n    'Блуза с жабо',\r\n    'Пуховый жилет',\r\n    'Джинсы с высокой талией',\r\n    'Пиджак оверсайз',\r\n    'Комбинезон джинсовый',\r\n    'Туника с поясом',\r\n    'Куртка косуха',\r\n    'Брюки карго',\r\n    'Топ с открытыми плечами',\r\n    'Пальто демисезонное',\r\n    'Джемпер с V-образным вырезом',\r\n    'Юбка плиссе',\r\n    'Ветровка с капюшоном',\r\n    'Рубашка оверсайз',\r\n    'Жилет меховой',\r\n    'Брюки с широким поясом',\r\n    'Платье-рубашка',\r\n    'Куртка стёганая',\r\n    'Кардиган на пуговицах',\r\n    'Шорты классические',\r\n    'Топ на бретелях',\r\n    'Плащ дождевик',\r\n    'Свитер с высоким горлом',\r\n    'Юбка-макси',\r\n    'Бомбер светоотражающий',\r\n    'Футболка поло',\r\n    'Костюм спортивный',\r\n    'Кожаные лоферы',\r\n    'Сумка кросс-боди'\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sizes",
                    "defaultValue": "['XS', 'S', 'M', 'L', 'XL', 'XXL']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "generateProducts",
                    "args": [
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "count",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRandomSizes",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProductService {\r\n  private descriptions = [\r\n    'Вельветовый пуховик',\r\n    'Утеплённое пальто с поясом',\r\n    'Кожаная косуха',\r\n    'Джинсы скинни',\r\n    'Кашемировый свитер',\r\n    'Спортивный костюм',\r\n    'Платье-миди с цветочным принтом',\r\n    'Бомбер с вышивкой',\r\n    'Рубашка в клетку',\r\n    'Шерстяное пальто',\r\n    'Джинсы mom-фасон',\r\n    'Тренч классический',\r\n    'Футболка oversize',\r\n    'Кардиган крупной вязки',\r\n    'Юбка-карандаш',\r\n    'Парка зимняя',\r\n    'Брюки чинос',\r\n    'Толстовка с капюшоном',\r\n    'Платье-футляр',\r\n    'Куртка-аляска',\r\n    'Свитшот с принтом',\r\n    'Костюм тройка',\r\n    'Шорты джинсовые',\r\n    'Блуза с жабо',\r\n    'Пуховый жилет',\r\n    'Джинсы с высокой талией',\r\n    'Пиджак оверсайз',\r\n    'Комбинезон джинсовый',\r\n    'Туника с поясом',\r\n    'Куртка косуха',\r\n    'Брюки карго',\r\n    'Топ с открытыми плечами',\r\n    'Пальто демисезонное',\r\n    'Джемпер с V-образным вырезом',\r\n    'Юбка плиссе',\r\n    'Ветровка с капюшоном',\r\n    'Рубашка оверсайз',\r\n    'Жилет меховой',\r\n    'Брюки с широким поясом',\r\n    'Платье-рубашка',\r\n    'Куртка стёганая',\r\n    'Кардиган на пуговицах',\r\n    'Шорты классические',\r\n    'Топ на бретелях',\r\n    'Плащ дождевик',\r\n    'Свитер с высоким горлом',\r\n    'Юбка-макси',\r\n    'Бомбер светоотражающий',\r\n    'Футболка поло',\r\n    'Костюм спортивный',\r\n    'Кожаные лоферы',\r\n    'Сумка кросс-боди'\r\n  ];\r\n\r\n  private sizes = ['XS', 'S', 'M', 'L', 'XL', 'XXL'];\r\n\r\n  generateProducts(count: number) {\r\n    return Array.from({ length: count }, (_, i) => {\r\n      const oldPrice = Math.floor(Math.random() * 4001) + 1000; \r\n      const availableSizes = this.getRandomSizes();\r\n      \r\n      return {\r\n        id: i + 1,\r\n        image: `${Math.floor(Math.random() * 8) + 1}`, \r\n        description: this.descriptions[i % this.descriptions.length],\r\n        oldPrice,\r\n        newPrice: Math.floor(Math.random() * (oldPrice - 500)) + 500, \r\n        sizes: availableSizes,\r\n        isFavorite: false\r\n      };\r\n    });\r\n  }\r\n\r\n  private getRandomSizes(): string[] {\r\n    const count = Math.floor(Math.random() * 3) + 2; \r\n    const shuffled = [...this.sizes].sort(() => 0.5 - Math.random());\r\n    return shuffled.slice(0, count).sort();\r\n  }\r\n}",
            "extends": [],
            "type": "injectable",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ProductService-1"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0998a71b94dfd07bb707b4bd35ec0296599dd2ddff330ba3fe1d74fd431c48dc7a97179638b4f4917c25b9978ad35a57ccfd64e7c8009245db630828be654d71",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "allProducts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "batchSize",
                    "defaultValue": "8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "visibleProducts",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Product[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<Product[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<Product[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadMore",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onScroll",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "trackById",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "Product",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ProductComponent",
                    "type": "component"
                },
                {
                    "name": "InfiniteScrollDirective",
                    "type": "directive"
                },
                {
                    "name": "CdkDrag"
                },
                {
                    "name": "CdkDropList"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InfiniteScrollDirective } from 'ngx-infinite-scroll';\r\nimport { CdkDragDrop, CdkDrag, CdkDropList, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { trigger, transition, style, animate } from '@angular/animations';\r\nimport { ProductService } from './product.service';\r\nimport { ProductComponent } from './components/product/product.component';\r\nimport { Product } from './models/product.interface';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ProductComponent,\r\n    InfiniteScrollDirective,\r\n    CdkDrag,\r\n    CdkDropList\r\n  ],\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  animations: [\r\n    trigger('fadeIn', [\r\n      transition(':enter', [\r\n        style({ opacity: 0 }),\r\n        animate('300ms ease-out', style({ opacity: 1 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class AppComponent implements OnInit {\r\n  allProducts: Product[] = [];\r\n  visibleProducts: Product[] = [];\r\n  batchSize = 8;\r\n  loading = false;\r\n  constructor(private productService: ProductService) {}\r\n\r\n  ngOnInit() {\r\n    this.allProducts = this.productService.generateProducts(100);\r\n    this.loadMore();\r\n  }\r\n\r\n  onScroll() {\r\n    if (!this.loading && this.visibleProducts.length < this.allProducts.length) {\r\n      this.loadMore();\r\n    }\r\n  }\r\n\r\n  loadMore() {\r\n    this.loading = true;\r\n    const nextBatch = this.allProducts.slice(\r\n      this.visibleProducts.length,\r\n      this.visibleProducts.length + this.batchSize\r\n    );\r\n\r\n    setTimeout(() => {\r\n      this.visibleProducts = [...this.visibleProducts, ...nextBatch];\r\n      this.loading = false;\r\n    }, 800);\r\n  }\r\n\r\n  drop(event: CdkDragDrop<Product[]>) {\r\n    moveItemInArray(\r\n      this.visibleProducts,\r\n      event.previousIndex,\r\n      event.currentIndex\r\n    );\r\n  }\r\n\r\n  trackById(index: number, item: Product): number {\r\n    return item.id;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  max-width: 1650px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 332px);\r\n  justify-content: center;\r\n  gap: 32px 0;\r\n  min-height: 100vh; \r\n\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: repeat(auto-fill, 300px);\r\n    gap: 24px;\r\n  }\r\n\r\n  @media (max-width: 480px) {\r\n    grid-template-columns: minmax(280px, 332px);\r\n    justify-items: center;\r\n    padding: 0 16px;\r\n    gap: 16px;\r\n  }\r\n}\r\n\r\napp-product {\r\n  display: block;\r\n  backface-visibility: hidden;\r\n}\r\n\r\n.dots-loader {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  padding: 20px 0;\r\n  z-index: 300;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  &__dot {\r\n    width: 12px;\r\n    height: 12px;\r\n    border-radius: 50%;\r\n    background-color: var(--color-dark);\r\n    opacity: 0.7;\r\n    animation: pulse 1.4s infinite ease-in-out;\r\n    \r\n    @for $i from 1 through 4 {\r\n      &:nth-child(#{$i}) {\r\n        animation-delay: $i * 0.15s;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@keyframes pulse {\r\n  0%, 100% { transform: scale(0.9); opacity: 0.6; }\r\n  50% { transform: scale(1.1); opacity: 1; }\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.cdk-drag-preview {\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\r\n              0 8px 10px 1px rgba(0, 0, 0, 0.14),\r\n              0 3px 14px 2px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.cdk-drag-placeholder {\r\n  opacity: 0;\r\n}\r\n\r\n.cdk-drag-animating {\r\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\r\n}\r\n\r\n.wrapper.cdk-drop-list-dragging .product:not(.cdk-drag-placeholder) {\r\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\r\n}",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "productService",
                        "type": "ProductService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  class=\"wrapper\"\r\n  infiniteScroll\r\n  [infiniteScrollDistance]=\"1\"\r\n  [infiniteScrollThrottle]=\"300\"\r\n  (scrolled)=\"onScroll()\"\r\n  cdkDropList\r\n  (cdkDropListDropped)=\"drop($event)\"\r\n>\r\n  <app-product\r\n    *ngFor=\"let product of visibleProducts; trackBy: trackById\"\r\n    [product]=\"product\"\r\n    cdkDrag\r\n    @fadeIn\r\n  ></app-product>\r\n\r\n\r\n</div>\r\n@if (loading) {\r\n  <div class=\"dots-loader\">\r\n    @for (i of [1,2,3,4]; track i) {\r\n      <div class=\"dots-loader__dot\"></div>\r\n    }\r\n  </div>\r\n}"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ProductComponent",
            "id": "component-ProductComponent-2a48378680577746122ee717b3399756edba6dfc4ea9bb0cd648fecf4d432b7536e4bbe2621c57b488e07b717aedefeb77753edb36e08af8658df70464e1a331",
            "file": "src/app/components/product/product.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product",
            "styleUrls": [
                "./product.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "product",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Product",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isImageLoaded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "pathImages",
                    "defaultValue": "'assets/images/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "productImage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLImageElement>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'productImage'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "selectedSize",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "getImageUrl",
                    "args": [
                        {
                            "name": "imageName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "imageName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initializeLazyLoading",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadImage",
                    "args": [
                        {
                            "name": "img",
                            "type": "HTMLImageElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "img",
                            "type": "HTMLImageElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectSize",
                    "args": [
                        {
                            "name": "size",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleFavorite",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "SalePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { \r\n  Component, Input, ChangeDetectionStrategy, \r\n  ElementRef, ViewChild, AfterViewInit \r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Product } from '../../models/product.interface';\r\nimport { SalePipe } from './sale.pipe';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  standalone: true,\r\n  imports: [CommonModule, SalePipe],\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ProductComponent implements AfterViewInit {\r\n  @ViewChild('productImage') productImage!: ElementRef<HTMLImageElement>;\r\n  @Input() product!: Product;\r\n  selectedSize: string | null = null;\r\n  \r\n  readonly pathImages = 'assets/images/';\r\n  isImageLoaded = false;\r\n\r\n  get hasDiscount(): boolean {\r\n    return this.product.newPrice < this.product.oldPrice;\r\n  }\r\n\r\n  getImageUrl(imageName: string): string {\r\n    return `${this.pathImages}${imageName}.webp`;\r\n  }\r\n\r\n  toggleFavorite(event: Event): void {\r\n    event.stopPropagation();\r\n    this.product.isFavorite = !this.product.isFavorite;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initializeLazyLoading();\r\n  }\r\n\r\n  private initializeLazyLoading(): void {\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          const img = entry.target as HTMLImageElement;\r\n          this.loadImage(img);\r\n          observer.unobserve(img);\r\n        }\r\n      });\r\n    }, {\r\n      rootMargin: '200px 0px',\r\n      threshold: 0.1\r\n    });\r\n\r\n    observer.observe(this.productImage.nativeElement);\r\n  }\r\n\r\n  private loadImage(img: HTMLImageElement): void {\r\n    const src = this.getImageUrl(this.product.image.toString());\r\n    img.src = src;\r\n    img.onload = () => {\r\n      this.isImageLoaded = true;\r\n      img.classList.add('loaded');\r\n    };\r\n    img.onerror = () => {\r\n      img.src = 'assets/images/placeholder.webp';\r\n    };\r\n  }\r\n\r\n  selectSize(size: string, event: Event): void {\r\n    event.stopPropagation();\r\n    this.selectedSize = this.selectedSize === size ? null : size;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".product-card {\r\n  width: 100%; \r\n  max-width: 332px;\r\n  margin: 0; \r\n  position: relative;\r\n  font-family: var(--font-main);\r\n  transition: all 0.3s ease;\r\n  &:hover {\r\n    .product-card__img {\r\n      transform: scale(1.3);\r\n    }\r\n    .product-footer {\r\n      display: flex;\r\n    }\r\n    .product-card__sizes-container {\r\n      display: flex;\r\n      opacity: 1;\r\n      z-index: 10;\r\n      position: absolute;\r\n      bottom: -80px;\r\n      left: -16px;\r\n      right: -16px;\r\n      padding: 16px;\r\n      background: var(--color-white);\r\n      box-shadow: var(--shadow-md);\r\n    }\r\n  }\r\n\r\n  &__badge {\r\n    color: var(--color-sale);\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    letter-spacing: 0.04em;\r\n    position: absolute;\r\n    top: 8px;\r\n    left: 8px;\r\n    background-color: var(--color-white);\r\n    width: 41px;\r\n    height: 24px;\r\n    line-height: 24px;\r\n    text-align: center;\r\n    z-index: 2;\r\n    border-radius: 4px;\r\n  }\r\n\r\n  &__image {\r\n    max-width: 100%;\r\n    overflow: hidden;\r\n    margin-bottom: 14px;\r\n    max-height: 444px;\r\n    position: relative;\r\n    background-color: var(--color-gray-light);\r\n  }\r\n\r\n  &__img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    transition: transform 0.6s ease-in-out;\r\n    display: block;\r\n  }\r\n\r\n  &__favorite {\r\n    width: 36px;\r\n    height: 36px;\r\n    position: absolute;\r\n    bottom: 16px;\r\n    right: 16px;\r\n    background: transparent;\r\n    border: none;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    transition: all 0.2s ease;\r\n    z-index: 2;\r\n    padding: 0;\r\n    margin: 0;\r\n\r\n    svg {\r\n      width: 20px;\r\n      height: 17px;\r\n      transition: all 0.2s ease;\r\n      path.inner {\r\n        fill: #fff; \r\n      }\r\n      path.heart-outline {\r\n        stroke: var(--color-dark);\r\n        stroke-linejoin: round;\r\n        transition: all 0.2s ease;\r\n      }\r\n    }\r\n\r\n      svg.active path.heart-outline {\r\n        \r\n        stroke: white; \r\n    }\r\n    svg.active path.heart-inner {\r\n        \r\n        fill: var(--color-sale); \r\n    }\r\n\r\n    &:hover {\r\n      transform: scale(1.1);\r\n      background: transparent;\r\n    }\r\n  }\r\n  &__title {\r\n    color: var(--color-dark);\r\n    font-size: 19px;\r\n    font-weight: 400;\r\n    line-height: 1.26;\r\n    letter-spacing: 0.04em;\r\n    margin: 0 0 8px;\r\n    min-height: 48px;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n    overflow: hidden;\r\n  }\r\n\r\n  &__prices {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 12px;\r\n    gap: 8px;\r\n  }\r\n\r\n  &__old-price {\r\n    color: var(--color-dark);\r\n    opacity: 0.7;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    line-height: 1;\r\n    text-decoration: line-through;\r\n  }\r\n\r\n  &__new-price {\r\n    color: var(--color-sale);\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: 1;\r\n  }\r\n\r\n  &__sizes-container {\r\n    display: none;\r\n    opacity: 0;\r\n    flex-direction: column;\r\n    transition: opacity 0.3s ease;\r\n  }\r\n\r\n  &__sizes-title {\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    line-height: 1.14;\r\n    letter-spacing: 0.04em;\r\n    opacity: 0.6;\r\n    color: var(--color-dark);\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  &__sizes-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n  }\r\n\r\n  &__size {\r\n    color: var(--color-dark);\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    line-height: 1.43;\r\n    letter-spacing: 0.04em;\r\n    cursor: pointer;\r\n    padding: 2px 8px;\r\n    border: 1px solid #eee;\r\n    border-radius: 4px;\r\n    transition: all 0.2s ease;\r\n    cursor: pointer;\r\n    user-select: none;\r\n    &:hover {\r\n      border-color: var(--color-dark);\r\n    }\r\n    &.selected {\r\n        border-color: var(--color-sale);\r\n        background-color: rgba(208, 19, 69, 0.05);\r\n        color: var(--color-sale);\r\n        font-weight: 500;\r\n      }\r\n  }\r\n\r\n  &__button {\r\n    width: 100px;\r\n    padding: 12px 0;\r\n    background: var(--color-dark);\r\n    color: var(--color-white);\r\n    border: none;\r\n    border-radius: 4px;\r\n    font-family: \"Futura PT\", sans-serif;\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n    transition: background-color 0.2s ease;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:hover {\r\n      background-color: var(--color-dark-light);\r\n    }\r\n\r\n    .material-icons {\r\n      margin-right: 8px;\r\n      font-size: 20px;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n.product-footer {\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  align-content: stretch;\r\n  display: none;\r\n  position: absolute;\r\n  z-index: 100;\r\n  background: #fff;\r\n  padding: 12px;\r\n  left: -12px;\r\n  right: -12px;\r\n  bottom: -74px;\r\n  display: none;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .product-card {\r\n    width: 300px;\r\n    margin-bottom: 24px;\r\n\r\n    &__title {\r\n      font-size: 17px;\r\n      min-height: 44px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .product-card {\r\n    width: 100%;\r\n    max-width: 350px;\r\n\r\n    &:hover {\r\n      .product-card__sizes-container {\r\n        bottom: -72px;\r\n        left: 0;\r\n        right: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./product.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "hasDiscount": {
                    "name": "hasDiscount",
                    "getSignature": {
                        "name": "hasDiscount",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 25
                    }
                }
            },
            "templateData": "<article\r\n  class=\"product-card\"\r\n  [class.product-card--favorite]=\"product.isFavorite\"\r\n>\r\n  @if (hasDiscount) {\r\n  <div class=\"product-card__badge\">\r\n    {{ product.oldPrice | sale : product.newPrice }} \r\n  </div>\r\n  }\r\n\r\n  <figure class=\"product-card__image\">\r\n    <img\r\n      #productImage\r\n      [attr.alt]=\"product.description\"\r\n      class=\"product-card__img\"\r\n      width=\"300\"\r\n      height=\"400\"\r\n      [attr.data-src]=\"getImageUrl(product.image.toString())\"\r\n      src=\"{{pathImages}}placeholder.webp\"\r\n      loading=\"lazy\"\r\n      [class.loaded]=\"isImageLoaded\"\r\n    />\r\n    <button class=\"product-card__favorite\" (click)=\"toggleFavorite($event)\">\r\n      <svg\r\n        [class.active]=\"product.isFavorite\"\r\n        width=\"26\"\r\n        height=\"22\"\r\n        viewBox=\"0 0 26 22\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          class=\"heart-inner\"\r\n          d=\"M18.1767 1.93408C16.95 1.93408 15.8253 2.29801 14.834 3.01577C13.8836 3.70389 13.2508 4.58035 12.8783 5.21767C12.5058 4.58031 11.873 3.70389 10.9226 3.01577C9.93129 2.29801 8.80662 1.93408 7.5799 1.93408C4.1566 1.93408 1.57504 4.5555 1.57504 8.03176C1.57504 11.7873 4.79572 14.3568 9.67141 18.2467C10.4994 18.9073 11.4379 19.6561 12.4133 20.4546C12.5419 20.56 12.707 20.6181 12.8783 20.6181C13.0496 20.6181 13.2148 20.56 13.3433 20.4547C14.3189 19.656 15.2573 18.9072 16.0857 18.2463C20.9609 14.3568 24.1816 11.7873 24.1816 8.03176C24.1816 4.5555 21.6 1.93408 18.1767 1.93408Z\"\r\n          [attr.fill]=\"product.isFavorite ? '#FF0000' : 'white'\"\r\n        />\r\n        <path\r\n          class=\"heart-outline\"\r\n          fill-rule=\"evenodd\"\r\n          clip-rule=\"evenodd\"\r\n          d=\"M14.2475 2.20579C15.4099 1.36419 16.7399 0.934082 18.1767 0.934082C22.1667 0.934082 25.1816 4.01773 25.1816 8.03176C25.1816 10.2387 24.2201 12.0464 22.7106 13.7516C21.2384 15.4147 19.1582 17.0743 16.7705 18.9793L16.7094 19.028C16.7094 19.028 16.7094 19.028 16.7094 19.028C15.8805 19.6893 14.9468 20.4343 13.9768 21.2284C13.6638 21.4848 13.273 21.6181 12.8783 21.6181C12.4835 21.6181 12.0925 21.4847 11.7793 21.228C10.8096 20.4341 9.87606 19.6893 9.04776 19.0284C9.04775 19.0284 9.04774 19.0284 9.04774 19.0284L8.9867 18.9797C6.59864 17.0745 4.51832 15.4148 3.04607 13.7517C1.53653 12.0464 0.575043 10.2387 0.575043 8.03176C0.575043 4.01773 3.58992 0.934082 7.5799 0.934082C9.0167 0.934082 10.3467 1.36419 11.5091 2.20579C12.0572 2.60265 12.5103 3.0502 12.8783 3.48715C13.2463 3.0502 13.6994 2.60265 14.2475 2.20579ZM13.4941 4.31408C13.2395 4.63647 13.0357 4.94841 12.8783 5.21767C12.7209 4.9484 12.5171 4.63646 12.2625 4.31408C11.9144 3.87338 11.4715 3.41318 10.9226 3.01577C9.93129 2.29801 8.80662 1.93408 7.5799 1.93408C4.1566 1.93408 1.57504 4.5555 1.57504 8.03176C1.57504 11.7873 4.79572 14.3568 9.67141 18.2467L9.67193 18.2471C10.4998 18.9076 11.4381 19.6562 12.4133 20.4546C12.5419 20.56 12.707 20.6181 12.8783 20.6181C13.0496 20.6181 13.2148 20.56 13.3433 20.4547C14.3189 19.656 15.2573 18.9072 16.0857 18.2463C20.9609 14.3568 24.1816 11.7873 24.1816 8.03176C24.1816 4.5555 21.6 1.93408 18.1767 1.93408C16.95 1.93408 15.8253 2.29801 14.834 3.01577C14.2851 3.41317 13.8422 3.87339 13.4941 4.31408Z\"\r\n          fill=\"#2D2D2D\"\r\n        />\r\n      </svg>\r\n    </button>\r\n  </figure>\r\n\r\n  <div class=\"product-card__info\">\r\n    <h3 class=\"product-card__title\">{{ product.description }}</h3>\r\n\r\n    <div class=\"product-card__prices\">\r\n      @if (hasDiscount) {\r\n      <span class=\"product-card__old-price\">\r\n        {{ product.oldPrice | number }} ₽\r\n      </span>\r\n      }\r\n      <span class=\"product-card__price\">\r\n        {{ product.newPrice | number }} ₽\r\n      </span>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"product-footer\">\r\n    <div class=\"product-card__sizes\">\r\n      <span class=\"product-card__sizes-label\">Размеры в наличии:</span>\r\n      <div class=\"product-card__sizes-list\">\r\n        @for (size of product.sizes; track size) {\r\n        <span\r\n          class=\"product-card__size\"\r\n          [class.selected]=\"selectedSize === size\"\r\n          (click)=\"selectSize(size, $event)\"\r\n        >\r\n          {{ size }}\r\n        </span>\r\n        }\r\n      </div>\r\n    </div>\r\n    <button class=\"product-card__button\">Купить</button>\r\n  </div>\r\n</article>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideAnimations()]\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideAnimations()]\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 7,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product/product.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/product/sale.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "SalePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/models/product.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Product",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/product.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/product.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ProductService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}